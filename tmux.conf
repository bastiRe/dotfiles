  set -g mouse on
  unbind C-b
  set -g prefix C-s

  bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

  bind-key -n C-h select-pane -L
  bind-key -n C-j select-pane -D
  bind-key -n C-k select-pane -U
  bind-key -n C-l select-pane -R
  set-option -g status-keys "emacs"

  set -g status-left-length 50
  set -g default-terminal 'tmux-256color'
  set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
  set-option -g default-command "reattach-to-user-namespace -l zsh"

  # Use vim keybindings in copy mode
  setw -g mode-keys vi

  bind [ copy-mode
  bind-key -T edit-mode-vi Up send-keys -X history-up
  bind-key -T edit-mode-vi Down send-keys -X history-down
  unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
  unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
  unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
  unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
  unbind-key -T copy-mode-vi  ]         ;   bind-key -T copy-mode-vi  ] send-keys -X copy-selection

# bind-key -T copy-mode-vi y send-keys -X copy-selection
# bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# bind-key -T copy-mode-vi v send-keys -X begin-selection 

  bind-key - split-window -v  -c '#{pane_current_path}'
  bind-key | split-window -h  -c '#{pane_current_path}'

  # Fine adjustment (1 or 2 cursor cells per bump)
  bind -n S-Left resize-pane -L 2
  bind -n S-Right resize-pane -R 2
  bind -n S-Down resize-pane -D 1
  bind -n S-Up resize-pane -U 1

  # Coarse adjustment (5 or 10 cursor cells per bump)
  bind -n C-Left resize-pane -L 10
  bind -n C-Right resize-pane -R 10
  bind -n C-Down resize-pane -D 5
  bind -n C-Up resize-pane -U 5

  # Window creation
  bind c new-window -c "#{pane_current_path}"
  bind-key b break-pane -d
  set -g base-index 1
  set -g renumber-windows on

  bind-key C-j choose-tree

  # Smart pane switching with awareness of Vim splits.
  # See: https://github.com/christoomey/vim-tmux-navigator
  is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

  bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
  bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
  bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
  bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
  bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

  bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

  bind-key C-b send-keys 'tat && exit' 'C-m'
  bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'


## COLORSCHEME: gruvbox dark
set-option -g status "on"

# default statusbar colors
set-option -g status-bg colour237 #bg1
set-option -g status-fg colour223 #fg1

# default window title colors
set-window-option -g window-status-bg colour214 #yellow
set-window-option -g window-status-fg colour237 #bg1

set-window-option -g window-status-activity-bg colour237 #bg1
set-window-option -g window-status-activity-fg colour248 #fg3

# active window title colors
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-fg colour237 #bg1

# pane border
set-option -g pane-active-border-fg colour250 #fg2
set-option -g pane-border-fg colour237 #bg1

# message infos
set-option -g message-bg colour239 #bg2
set-option -g message-fg colour223 #fg1

# writting commands inactive
set-option -g message-command-bg colour239 #fg3
set-option -g message-command-fg colour223 #bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour167 #bg, red


## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-attr "none"
set-option -g status-justify "left"
set-option -g status-left-attr "none"
set-option -g status-left-length "80"
set-option -g status-right-attr "none"
set-option -g status-right-length "80"
set-window-option -g window-status-activity-attr "none"
set-window-option -g window-status-attr "none"
set-window-option -g window-status-separator ""

set-option -g status-left "#[fg=colour248, bg=colour241] #S #[fg=colour241, bg=colour237, nobold, noitalics, nounderscore]"
set-option -g status-right "#[fg=colour239, bg=colour237, nobold, nounderscore, noitalics]#[fg=colour246,bg=colour239] %Y-%m-%d  %H:%M #[fg=colour248, bg=colour239, nobold, noitalics, nounderscore]#[fg=colour237, bg=colour248] #h "

set-window-option -g window-status-current-format "#[fg=colour239, bg=colour248, :nobold, noitalics, nounderscore]#[fg=colour239, bg=colour214] #I #[fg=colour239, bg=colour214, bold] #W #[fg=colour214, bg=colour237, nobold, noitalics, nounderscore]"
set-window-option -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour223,bg=colour239] #I #[fg=colour223, bg=colour239] #W #[fg=colour239, bg=colour237, noitalics]"
